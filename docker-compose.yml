services:
  postgres:
    image: pgvector/pgvector:0.8.0-pg17
    restart: unless-stopped
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD", "sh", "-c", "pg_isready -U $$POSTGRES_USER -h $$(hostname -i)"]
      interval: 10s
      start_period: 30s

  minio:
    image: minio/minio:RELEASE.2024-06-06T09-36-42Z
    restart: unless-stopped
    environment:
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: password
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 10s

  redis:
    image: docker.io/valkey/valkey:8.0.1-alpine
    restart: unless-stopped
    container_name: redis-valkey
    volumes:
      - redis:/data
    command: "valkey-server --save 30 1"
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"
    healthcheck:
      test: "[ $$(valkey-cli ping) = 'PONG' ]"
      start_period: 5s
      interval: 1s
      timeout: 3s
      retries: 5

  pipelines:
    image: ghcr.io/open-webui/pipelines:git-adec657
    user: "${UID}:${GID}"
    restart: unless-stopped
    ports:
      - "9099:9099"
    volumes:
      - ./pipelines/:/app/pipelines
    environment:
      PIPELINES_API_KEY: ${PIPELINES_API_KEY}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9099/v1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  openwebui:
    image: ghcr.io/etalab-ia/albert-conversation/app:c09c843f318c06d7cc0f031baf37afa83c810542
    # Last stable version, see full list here: https://github.com/open-webui/open-webui/releases
    #image: ghcr.io/open-webui/open-webui:0.6.15
    restart: unless-stopped
    ports:
      - "3000:8080"
    environment:
      ENABLE_PERSISTENT_CONFIG: false
      WEBUI_NAME: "openwebup.sklein.xyz"
      ENV: dev
      DEFAULT_LOCALE: fr
      GLOBAL_LOG_LEVEL: WARNING
      WEBUI_SECRET_KEY: ${WEBUI_SECRET_KEY}

      ENABLE_OLLAMA_API: false
      ENABLE_OPENAI_API: true
      ENABLE_CODE_EXECUTION: false
      ENABLE_AUTOCOMPLETE_GENERATION: false
      ENABLE_EVALUATION_ARENA_MODELS: false
      ENABLE_TAGS_GENERATION: false

      DATABASE_URL: postgresql://postgres:password@postgres:5432/postgres

      VECTOR_DB: pgvector
      PGVECTOR_DB_URL: postgresql://postgres:password@postgres:5432/postgres

      ENABLE_WEBSOCKET_SUPPORT: true
      WEBSOCKET_MANAGER: redis
      WEBSOCKET_REDIS_URL: "redis://redis:6379/1"

      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ""

      # Documentation: https://docs.openwebui.com/getting-started/env-configuration/#cloud-storage
      STORAGE_PROVIDER: s3
      S3_ACCESS_KEY_ID: admin
      S3_SECRET_ACCESS_KEY: password
      S3_ADDRESSING_STYLE: "path"
      S3_BUCKET_NAME: "openwebui"
      S3_ENDPOINT_URL: "http://minio:9000/"
      S3_KEY_PREFIX: "openwebui"
      S3_REGION_NAME: "us-east-1"

      OPENAI_API_BASE_URLS: https://openrouter.ai/api/v1;https://api.scaleway.ai/355b9bff-ac63-4696-9c10-5f6603f27a68/v1;http://pipelines:9099/
      OPENAI_API_KEYS: ${OPENROUTER_API_SECRET_KEY};${SCALEWAY_GENERATIVE_API_SECRET_KEY};${PIPELINES_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
      pipelines:
        condition: service_healthy

volumes:
  postgres:
     name: ${COMPOSE_PROJECT_NAME}_postgres
  minio:
     name: ${COMPOSE_PROJECT_NAME}_minio
  redis:
     name: ${COMPOSE_PROJECT_NAME}_redis
